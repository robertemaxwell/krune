name: CI/CD Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test-server:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    
    - name: Grant execute permission for gradlew
      run: chmod +x ./server/gradlew
    
    - name: Build with Gradle
      working-directory: ./server
      run: ./gradlew build
    
    - name: Run tests
      working-directory: ./server
      run: ./gradlew test
    
    - name: Upload server build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: server-build
        path: server/build/libs/*.jar
        retention-days: 1

  build-and-test-client:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json
    
    - name: Install dependencies
      working-directory: ./client
      run: npm ci
    
    - name: Build client
      working-directory: ./client
      run: npm run build
    
    - name: Run tests
      working-directory: ./client
      run: npm test
      
    - name: Upload client build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: client-build
        path: client/dist
        retention-days: 1
  
  docker-build:
    needs: [build-and-test-server, build-and-test-client]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download server build artifact
      uses: actions/download-artifact@v3
      with:
        name: server-build
        path: server/build/libs
    
    - name: Download client build artifact
      uses: actions/download-artifact@v3
      with:
        name: client-build
        path: client/dist
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to DockerHub
      if: github.ref == 'refs/heads/main'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
    - name: Build and push server image
      uses: docker/build-push-action@v3
      with:
        context: ./server
        push: ${{ github.ref == 'refs/heads/main' }}
        tags: your-dockerhub-username/krune-server:latest
    
    - name: Build and push client image
      uses: docker/build-push-action@v3
      with:
        context: ./client
        push: ${{ github.ref == 'refs/heads/main' }}
        tags: your-dockerhub-username/krune-client:latest

  # Deployment job - uncomment and configure when ready for deployment
  # deploy:
  #   needs: docker-build
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
  #   
  #   steps:
  #   - name: Deploy to production
  #     run: echo "Add deployment steps here" 